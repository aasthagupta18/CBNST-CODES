#include<stdio.h>
#include<math.h>
float f(float x){
    return x*x*x-2*x-5 ;//can define your own function here
}

float formula(float x1,float x2){
    return (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));//same as bisection method just the formula is different
}
int regular_falsi(float x1,float x2,float tol,int n){
    float x,x3;
    x=(x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));
    printf("\nITERATIONS\t\t\tROOTS\n");
    int i=1;
    while(i<=n){
        if(f(x)*f(x1)<0){
            x2=x;
        }
        else{
            x1=x;
        }
        printf("%d\t\t\t\t%f\t\t\t\t\n",i,x);
        x3=(x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));
        if(fabs(x3-x)<tol){
            printf("\nFinal Root after %d Iteration  -------> %f",i,x);
            return 0;
        }
        x=x3;
        i++;
    }
    printf("Final root after %d Iteration-------> %f ",i,x);
}

int main(){
    int n;
    float x1,x2,x,tol,x3;
    printf("Enter the tolerance\n");
    scanf("%f",&tol);
    printf("Enter the value of max Iterations\n");
    scanf("%d",&n);
    do{
        printf("Enter the value of x1\n");
        scanf("%f",&x1);
        printf("Enter the value of x2\n");
        scanf("%f",&x2);
        if(f(x1)*f(x2)>0){
            printf("Invalid value of x1 and x2\n");
            continue;
        }
        else{
            printf("The roots of the equation lies between %.1f and %.1f",x1,x2);
            break;
        }
    }while(1);
    regular_falsi(x1,x2,tol,n);
}
